#!/usr/bin/env node
"use strict";const prog=require("programmer"),col=require("colors/safe").green,source=require("./index"),com=prog.commander,log=console.log;if(com.version(require("./../package.json").version,"    --version").usage("[options] <text>").option("-b  --banner","print banner in ASCII style").option("-f  --font [font]","font used to print text ["+source.fonts.join("|")+"]").option("-c  --color [color]","color of the printed text ["+source.colors.join("|")+"]").option("    --bg-color [bg color]","background color of the printed text ["+source.bgColors.join("|")+"]"),com.on("--help",function(){log(),log(col("  Examples:")),log(),log(col("    $ "+com.name()+' --color red "print banner"')),log(col("    $ "+com.name()+" --help")),log()}),com.parse(process.argv),!prog.exited){try{let o=com.args.shift()||source.defaults.text;o.trim(),o?source.PRINT({text:o,isBanner:com.banner,font:com.font,color:com.color,bgColor:com.bgColor}):com.outputHelp()}catch(o){com.outputHelp()}prog.exit(0)}