#!/usr/bin/env node
function around(o,t,n){var e=o[t];o[t]=function(){for(var o=new Array(arguments.length),t=0;t<o.length;t++)o[t]=arguments[t];return n.call(this,e,o)}}function before(o,t,n){var e=o[t];o[t]=function(){n.call(this),e.apply(this,arguments)}}function exit(o){function t(){n--||_exit(o)}var n=0,e=[process.stdout,process.stderr];exit.exited=!0,e.forEach(function(o){n+=1,o.write("",t)}),t()}var com=require("commander"),col=require("colors/safe").green,source=require("./index"),_exit=process.exit,log=console.log;if(process.exit=exit,around(com,"optionMissingArgument",function(o,t){return com.outputHelp(),o.apply(this,t),{args:[],unknown:[]}}),before(com,"outputHelp",function(){this._helpShown=!0}),before(com,"unknownOption",function(){this._allowUnknownOption=this._helpShown,this._helpShown||com.outputHelp()}),com.version(require("./../package.json").version,"    --version").usage("[options] [text]").option("-b  --banner","print banner in ASCII style").option("-f  --font [font]","font used to print text ["+source.fonts.join("|")+"]").option("-c  --color [color]","color of the printed text ["+source.colors.join("|")+"]").option("    --bg-color [bg color]","background color of the printed text ["+source.bgColors.join("|")+"]"),com.on("--help",function(){log(),log(col("  Examples:")),log(),log(col("    $ "+com.name()+' --color red "print banner"')),log(col("    $ "+com.name()+" --help")),log()}),com.parse(process.argv),!exit.exited){try{var inputData=com.args.shift()||source.defaults.text;inputData.trim(),inputData?source.PRINT({text:inputData,isBanner:com.banner,font:com.font,color:com.color,bgColor:com.bgColor}):com.outputHelp()}catch(o){com.outputHelp()}_exit(0)}